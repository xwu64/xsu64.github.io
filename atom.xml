<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xiaoliang&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xwu64.github.io/"/>
  <updated>2022-02-25T07:15:56.499Z</updated>
  <id>http://xwu64.github.io/</id>
  
  <author>
    <name>Xiaoliang Wu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>美国买房相关事宜小记</title>
    <link href="http://xwu64.github.io/2022/02/24/Note-for-How-to-Buy-a-House/"/>
    <id>http://xwu64.github.io/2022/02/24/Note-for-How-to-Buy-a-House/</id>
    <published>2022-02-25T07:08:55.000Z</published>
    <updated>2022-02-25T07:15:56.499Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近在了解在美国买房的相关事宜。在kindle上买了《How to Buy a House: What Everyone Should Know Before They Buy or Sell a Home》来大体上了解一下。这本书的特点就是没有深度，非常好读。比较适合小白来对整个过程有个基本概念。选这本书的原因就是因为&lt;strong&gt;便宜&lt;/strong&gt;！&lt;strong&gt;(5.99$)&lt;/strong&gt; 因为这本书写在2017年，里面的内容对今天的市场不免有些过时。另外里面还有拼写错误和排版问题，肯定不是什么高质量书籍。作者并不是湾区的 Agent，湾区的房地产市场和美国大部分地区也都不太一样。所以这里并不推荐对这本书有太高的期待。&lt;/p&gt;
&lt;p&gt;但是作为普通消费者，里面的基础信息已经完全够了，剩下的都应该是 Agent 的指责。所以在这里重要的事情说三遍：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;！！！选一个靠谱的 Agent ！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;！！！选一个靠谱的 Agent ！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;！！！选一个靠谱的 Agent ！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最靠谱的方法莫过于朋友同学的推荐，然后和这些 Agent 看一次房，选出最适合自己的 Agent。&lt;/p&gt;
&lt;p&gt;以下内容将会介绍我读了本书后觉得对我有用的知识。另外，我会补充一些湾区房地产市场的特殊性。希望这些内容也能帮助大家减少一些买房过程中的疑惑。&lt;/p&gt;
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="读书笔记" scheme="http://xwu64.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="房地产" scheme="http://xwu64.github.io/tags/%E6%88%BF%E5%9C%B0%E4%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>理解 Python 中的 __all__</title>
    <link href="http://xwu64.github.io/2022/02/10/Understand-Python-all/"/>
    <id>http://xwu64.github.io/2022/02/10/Understand-Python-all/</id>
    <published>2022-02-11T06:18:17.000Z</published>
    <updated>2022-02-11T06:18:17.601Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在 GitHub 上寻找开源项目的时候偶然看到 &lt;a href=&quot;https://github.com/RhetTbull/osxphotos/issues/266&quot;&gt;osxphotos&lt;/a&gt; 里面有个 issue 是在 Python 文件中显式的定义 &lt;code&gt;__all__&lt;/code&gt;。里面还附了份&lt;a href=&quot;http://xion.io/post/code/python-all-wild-imports.html&quot;&gt;链接&lt;/a&gt;解释为什么需要 &lt;code&gt;__all__&lt;/code&gt;。在这里东施效颦的用中文解释一下。&lt;/p&gt;
&lt;h1 id=&quot;TL-DR&quot;&gt;&lt;a href=&quot;#TL-DR&quot; class=&quot;headerlink&quot; title=&quot;TL;DR&quot;&gt;&lt;/a&gt;TL;DR&lt;/h1&gt;&lt;p&gt;&lt;code&gt;__all__&lt;/code&gt; 定义的字符串列表规定了 &lt;code&gt;from module import *&lt;/code&gt; 会导入该文件中的哪些类，函数，变量。不在 &lt;code&gt;__all__&lt;/code&gt; 中的类，函数，变量不会被导入。&lt;/p&gt;
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="Python" scheme="http://xwu64.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>不仅要带着问题找答案，还要带着答案找问题</title>
    <link href="http://xwu64.github.io/2022/01/30/Get-Answer-then-Find-Question/"/>
    <id>http://xwu64.github.io/2022/01/30/Get-Answer-then-Find-Question/</id>
    <published>2022-01-30T18:46:09.000Z</published>
    <updated>2022-01-31T00:39:05.328Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;从小到大的学习，我们都是带着问题去找答案。得到答案后，将答案写在问题后面。从此，如果不遇到同样的问题，这个答案将被束之高阁，直到被我们遗忘。&lt;/p&gt;
&lt;p&gt;这样的学习是低效的。第一，在这个过程中，我们只做到了“学”，而没有“习”。缺乏对学到内容的梳理总结与输出。费曼学习法之
        
      
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="随想" scheme="http://xwu64.github.io/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Pixar&#39;s Story Formula</title>
    <link href="http://xwu64.github.io/2021/10/23/Pixar-s-Story-Formula/"/>
    <id>http://xwu64.github.io/2021/10/23/Pixar-s-Story-Formula/</id>
    <published>2021-10-23T21:23:05.000Z</published>
    <updated>2021-10-23T21:28:42.970Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在看阮一峰的&lt;a href=&quot;http://www.ruanyifeng.com/blog/2021/10/weekly-issue-180.html&quot;&gt;《科技爱好者周刊》第180期&lt;/a&gt;时，看到其中推荐了&lt;a href=&quot;https://startuppitch.substack.com/p/nail-your-startup-pitch-use-pixars&quot;&gt;皮克斯创作故事的公式&lt;/a&gt;，感觉以后可以以此作为写作提纲，特此记录下来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/w1a9oFl.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://xwu64.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Writing" scheme="http://xwu64.github.io/tags/Writing/"/>
    
  </entry>
  
  <entry>
    <title>[DIY] Remove Backgound of Portrait Photo</title>
    <link href="http://xwu64.github.io/2021/09/23/DIY-Remove-Backgound-of-Portrait-Photo/"/>
    <id>http://xwu64.github.io/2021/09/23/DIY-Remove-Backgound-of-Portrait-Photo/</id>
    <published>2021-09-23T22:03:30.000Z</published>
    <updated>2021-09-23T22:22:26.947Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;This blog introduces tools used to remove background of portrait photos. Required tools are listed below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/danielgatis/rembg&quot;&gt;Rembg&lt;/a&gt;: remove background by using u2net model&lt;/li&gt;
&lt;li&gt;MacOS Preview: polish photos from Rembg and crop photos &lt;/li&gt;
&lt;li&gt;A simple Python script: change the background from transparent to any color (e.g, white). &lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="English" scheme="http://xwu64.github.io/tags/English/"/>
    
      <category term="Python" scheme="http://xwu64.github.io/tags/Python/"/>
    
      <category term="DIY" scheme="http://xwu64.github.io/tags/DIY/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记 - 《Intermediate Python》</title>
    <link href="http://xwu64.github.io/2021/08/23/Read-Notes-of-Intermediate-Python/"/>
    <id>http://xwu64.github.io/2021/08/23/Read-Notes-of-Intermediate-Python/</id>
    <published>2021-08-24T03:54:17.000Z</published>
    <updated>2021-08-24T04:14:23.646Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/NgaNqtI.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;刚刚读完 &lt;a href=&quot;https://book.pythontips.com/en/latest/&quot;&gt;《Intermediate Python》&lt;/a&gt;（&lt;a href=&quot;https://py.eastlakeside.cn/&quot;&gt;中译《Python 进阶》&lt;/a&gt;）。部分知识在看书前已经知道，在这里将新了解到的内容总结一下。方便未来的查阅。其中涉及到的内容有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Filter &lt;/li&gt;
&lt;li&gt;Reduce&lt;/li&gt;
&lt;li&gt;Coroutine&lt;/li&gt;
&lt;li&gt;__slots__&lt;/li&gt;
&lt;li&gt;namedtuple&lt;/li&gt;
&lt;li&gt;One-liners&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="Python" scheme="http://xwu64.github.io/tags/Python/"/>
    
      <category term="读书笔记" scheme="http://xwu64.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记 - 《专注力》</title>
    <link href="http://xwu64.github.io/2021/08/21/Read-Notes-of-HyperFocus/"/>
    <id>http://xwu64.github.io/2021/08/21/Read-Notes-of-HyperFocus/</id>
    <published>2021-08-21T22:50:06.000Z</published>
    <updated>2021-08-24T03:57:34.423Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/z1NCPqB.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;趁着在FB的实习结束，读了 Chris Bailey 的 &lt;a href=&quot;https://book.douban.com/subject/34928250/&quot;&gt;《专注力》&lt;/a&gt;。感觉其中的方法和观点对我很有帮助，因此顺手写下了些笔记。本篇博文的目的是将这些笔记电子化，方便以后查阅。因为里面提到的一些方法我在读这本书前就使用了，因此可能不在笔记内容范围内（比如关闭大多数app的通知），如想系统了解，还是应该读原书。&lt;/p&gt;
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="读书笔记" scheme="http://xwu64.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="效率" scheme="http://xwu64.github.io/tags/%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>吐槽怪物猎人电影</title>
    <link href="http://xwu64.github.io/2021/04/10/monster-hunters-movie/"/>
    <id>http://xwu64.github.io/2021/04/10/monster-hunters-movie/</id>
    <published>2021-04-10T23:07:42.000Z</published>
    <updated>2021-08-24T03:57:42.944Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/008eGmZEly1gpfg3u6jhqj31hc0u0hdu.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近沉迷 Monster Hunter Rise
        
      
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="Movie" scheme="http://xwu64.github.io/tags/Movie/"/>
    
      <category term="怪物猎人" scheme="http://xwu64.github.io/tags/%E6%80%AA%E7%89%A9%E7%8C%8E%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>Comparison of Python Linked List Modules llist, pyllist, cllist</title>
    <link href="http://xwu64.github.io/2020/08/28/Comparison-of-Python-Linked-List-Modules-llist-pyllist-cllist/"/>
    <id>http://xwu64.github.io/2020/08/28/Comparison-of-Python-Linked-List-Modules-llist-pyllist-cllist/</id>
    <published>2020-08-28T18:07:03.000Z</published>
    <updated>2020-08-28T18:13:24.000Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;TL;DR: &lt;code&gt;cllist&lt;/code&gt; module presents the best performance.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="English" scheme="http://xwu64.github.io/tags/English/"/>
    
      <category term="Python" scheme="http://xwu64.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Most Commonly Used Python Data Structures that are NOT built-in</title>
    <link href="http://xwu64.github.io/2020/04/24/Most-Commonly-Used-Python-Data-Structures-that-are-NOT-built-in/"/>
    <id>http://xwu64.github.io/2020/04/24/Most-Commonly-Used-Python-Data-Structures-that-are-NOT-built-in/</id>
    <published>2020-04-25T03:48:22.000Z</published>
    <updated>2020-04-25T01:48:22.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;This blog will introduce &lt;strong&gt;deque&lt;/strong&gt;, &lt;strong&gt;bisect&lt;/strong&gt;, &lt;strong&gt;defaultdict&lt;/strong&gt;, &lt;strong&gt;Counter&lt;/strong&gt;, &lt;strong&gt;OrderedDict&lt;/strong&gt;, &lt;strong&gt;heapq&lt;/strong&gt;. For every data structure, I’ll introduce their basic knowledge, example code and LeetCode problems. The four basic inbuilt data structures (Lists, Dictionary, Tuple, and Sets) can be learned from &lt;a href=&quot;https://www.geeksforgeeks.org/inbuilt-data-structures-python/&quot;&gt;GeeksforGeeks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of course, this blog won’t cover all useful functions or data structures. I’ll update this article when I find more useful data structures. &lt;/p&gt;
    
    </summary>
    
    
      <category term="English" scheme="http://xwu64.github.io/tags/English/"/>
    
      <category term="Python" scheme="http://xwu64.github.io/tags/Python/"/>
    
      <category term="Data Structure" scheme="http://xwu64.github.io/tags/Data-Structure/"/>
    
      <category term="LeetCode" scheme="http://xwu64.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Plot Graph to Show Ideas - Installation and Scatter Plot</title>
    <link href="http://xwu64.github.io/2020/03/15/plot-graph-to-show-ideas/"/>
    <id>http://xwu64.github.io/2020/03/15/plot-graph-to-show-ideas/</id>
    <published>2020-03-16T06:18:03.000Z</published>
    <updated>2020-03-16T04:24:28.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;When we do experiments to observe or demonstrate some ideas, one graph can produce a correct intuition if you use a proper graph. For example, if you want to observe the distribution of data, the bar or line graphs are not sufficient to show this information. Because they can only show the average and variance of data. If the data is plotted by the violin or CDF (cumulative distribution function), they will show the distribution of data in a better way. &lt;/p&gt;
&lt;p&gt;Of course, how to visualize data is not easy work and I’m not a profession here. I just want to introduce 1) how to plot some general graphs by Python3 (Matplotlib package); 2) these graphs are suited to which situations. &lt;/p&gt;
&lt;p&gt;If you know better references, please feel free to send them to me by Email. (&lt;a href=&quot;mailto:zurielibra@gmail.com&quot;&gt;zurielibra@gmail.com&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;More examples of data visualization can be found on the &lt;a href=&quot;https://matplotlib.org/&quot;&gt;website&lt;/a&gt; of Matplotlib. &lt;/p&gt;
    
    </summary>
    
    
      <category term="English" scheme="http://xwu64.github.io/tags/English/"/>
    
      <category term="Python" scheme="http://xwu64.github.io/tags/Python/"/>
    
      <category term="Matplotlib" scheme="http://xwu64.github.io/tags/Matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>己亥除夕</title>
    <link href="http://xwu64.github.io/2020/01/24/%E5%B7%B1%E4%BA%A5%E9%99%A4%E5%A4%95/"/>
    <id>http://xwu64.github.io/2020/01/24/己亥除夕/</id>
    <published>2020-01-25T04:59:04.000Z</published>
    <updated>2020-01-29T04:28:52.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;雪浅夜深爆竹夜&lt;br&gt;键白字黑文章现&lt;br&gt;家有归无又几载&lt;br&gt;学海书山为功名&lt;/p&gt;
&lt;p&gt;祝大家鼠年大吉，身体健康！&lt;/p&gt;

        
      
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="随想" scheme="http://xwu64.github.io/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Python 中的多线程“并行“</title>
    <link href="http://xwu64.github.io/2019/12/12/Run-Multithread-Python-Program-Parallel/"/>
    <id>http://xwu64.github.io/2019/12/12/Run-Multithread-Python-Program-Parallel/</id>
    <published>2019-12-12T21:42:01.000Z</published>
    <updated>2021-08-23T23:58:17.040Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这几天尝试用 Python3 写一个多线程应用，发现了一个之前一直不知道的语言特性：GIL (Global Interpreter Lock) 全局解释器锁。&lt;/p&gt;
&lt;p&gt;先写结论：&lt;strong&gt;GIL 的存在让 Python 的多线程应用只能实现&lt;u&gt;并发&lt;/u&gt;，而不能实现&lt;u&gt;并行&lt;/u&gt;。如果想实现并行，只能通过多进程。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="Python" scheme="http://xwu64.github.io/tags/Python/"/>
    
      <category term="GIL" scheme="http://xwu64.github.io/tags/GIL/"/>
    
      <category term="Multithread" scheme="http://xwu64.github.io/tags/Multithread/"/>
    
      <category term="Parallel" scheme="http://xwu64.github.io/tags/Parallel/"/>
    
      <category term="Cython" scheme="http://xwu64.github.io/tags/Cython/"/>
    
  </entry>
  
  <entry>
    <title>Create New User with Temporary Password on Linux</title>
    <link href="http://xwu64.github.io/2019/11/16/Create-New-User-with-Temporary-Password-on-Linux/"/>
    <id>http://xwu64.github.io/2019/11/16/Create-New-User-with-Temporary-Password-on-Linux/</id>
    <published>2019-11-17T00:41:18.000Z</published>
    <updated>2019-11-16T22:41:18.000Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;Create new user and home directory&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; useradd -m USERNAME&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;-m&lt;/code&gt;  option is used to create the user’s home directory if it does not exist.&lt;/p&gt;
&lt;p&gt;If you want to specify the path of the home directory, use &lt;code&gt;-d&lt;/code&gt; and specify the path:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; useradd -m -d /PATH/TO/FOLDER USERNAME&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Set temporary password for new user&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; passwd USERNAME&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Change password expiration information&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; chage -d 0 USERNAME&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;-d&lt;/code&gt;  option is used to set the number of days since January 1st, 1970 when the password was last changed.&lt;/p&gt;
    
    </summary>
    
    
      <category term="English" scheme="http://xwu64.github.io/tags/English/"/>
    
      <category term="Linux" scheme="http://xwu64.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Coffee Shop - Chicago (1)</title>
    <link href="http://xwu64.github.io/2019/11/08/Coffee-Shop-Chicago-1/"/>
    <id>http://xwu64.github.io/2019/11/08/Coffee-Shop-Chicago-1/</id>
    <published>2019-11-09T05:46:18.000Z</published>
    <updated>2019-11-09T03:52:53.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JACKALOPE-COFFEE-amp-TEA&quot;&gt;&lt;a href=&quot;#JACKALOPE-COFFEE-amp-TEA&quot; class=&quot;headerlink&quot; title=&quot;JACKALOPE COFFEE &amp;amp; TEA&quot;&gt;&lt;/a&gt;JACKALOPE COFFEE &amp;amp; TEA&lt;/h1&gt;&lt;p&gt;Photos at Jackalope coffee &amp;amp; tea. Very nice environment. The address of shop locates at &lt;a href=&quot;https://goo.gl/maps/6HRKW9iUxH34ehHN8&quot;&gt;755 W 32nd St, Chicago, IL 60616&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6gy1g84hecno5ij30sg0lcagj.jpg&quot; alt=&quot;Cashier desk&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="coffee shop" scheme="http://xwu64.github.io/tags/coffee-shop/"/>
    
      <category term="Photos" scheme="http://xwu64.github.io/tags/Photos/"/>
    
  </entry>
  
  <entry>
    <title>996,996</title>
    <link href="http://xwu64.github.io/2019/08/13/996-996/"/>
    <id>http://xwu64.github.io/2019/08/13/996-996/</id>
    <published>2019-08-14T04:07:24.000Z</published>
    <updated>2019-08-14T02:55:39.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;996, 996&lt;br&gt;996 的码农写着代码&lt;br&gt;996 的司机开着出租&lt;br&gt;996 的医生做着手术&lt;br&gt;996
        
      
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="随想" scheme="http://xwu64.github.io/tags/%E9%9A%8F%E6%83%B3/"/>
    
      <category term="996" scheme="http://xwu64.github.io/tags/996/"/>
    
  </entry>
  
  <entry>
    <title>人类未来疆域展望</title>
    <link href="http://xwu64.github.io/2019/06/23/%E4%BA%BA%E7%B1%BB%E6%9C%AA%E6%9D%A5%E7%96%86%E5%9F%9F%E5%B1%95%E6%9C%9B/"/>
    <id>http://xwu64.github.io/2019/06/23/人类未来疆域展望/</id>
    <published>2019-06-24T01:27:01.000Z</published>
    <updated>2019-06-23T23:40:51.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;无数科幻小说已经想象过未来人类在宇宙中的足迹。在早期科幻中，作者们幻想人类可以以任意速度在空间中飞行。在爱因斯坦相对论得到广泛认可后，飞船或通过虫洞的类似方式移动， 或利用人体冬眠度过漫长的亚光速旅途。在小说中，一个国家的疆域基本是以星系为单位，光年为尺度。但是在真实世界中，一个人类国家的版图真的可能这么大吗？在后续的文章中，我将基于人类已有的历史推测出未来可能的最大国土面积。&lt;/p&gt;
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="随想" scheme="http://xwu64.github.io/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>ACM PADS poster</title>
    <link href="http://xwu64.github.io/2019/06/13/ACM-PADS-poster/"/>
    <id>http://xwu64.github.io/2019/06/13/ACM-PADS-poster/</id>
    <published>2019-06-14T05:27:06.000Z</published>
    <updated>2019-06-14T03:38:58.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;You can download PDF version of poster by &lt;/p&gt;
&lt;p&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="English" scheme="http://xwu64.github.io/tags/English/"/>
    
      <category term="Blockchain" scheme="http://xwu64.github.io/tags/Blockchain/"/>
    
      <category term="Academic Conference" scheme="http://xwu64.github.io/tags/Academic-Conference/"/>
    
      <category term="EOS.IO" scheme="http://xwu64.github.io/tags/EOS-IO/"/>
    
  </entry>
  
  <entry>
    <title>Latex &quot;Text uses Type 3 font&quot; warning</title>
    <link href="http://xwu64.github.io/2019/04/10/type3/"/>
    <id>http://xwu64.github.io/2019/04/10/type3/</id>
    <published>2019-04-10T18:10:50.000Z</published>
    <updated>2019-04-10T16:10:50.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;This Blog is written by Chinese. If you prefer a guide written by english, you can visit  &lt;a href=&quot;http://phyletica.org/matplotlib-fonts/&quot;&gt;Jamie Oaks’s Blog&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;最近提交论文后，收到了 ACM 的要求：将 “type 3 fonts” 变为 “type 1 fonts”。查了一下后，发现大多数论文都不能使用 “type 3 fonts”。因此记录一下这回的解决方案，免得下回四处 Google 。&lt;/p&gt;
    
    </summary>
    
    
      <category term="中文" scheme="http://xwu64.github.io/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="Latex" scheme="http://xwu64.github.io/tags/Latex/"/>
    
      <category term="Bug Fix" scheme="http://xwu64.github.io/tags/Bug-Fix/"/>
    
  </entry>
  
  <entry>
    <title>Technically Understanding EOS</title>
    <link href="http://xwu64.github.io/2019/04/03/Technically-Understanding-EOS/"/>
    <id>http://xwu64.github.io/2019/04/03/Technically-Understanding-EOS/</id>
    <published>2019-04-04T04:04:08.000Z</published>
    <updated>2019-04-04T02:04:08.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;EOS.IO is a Blockchain system following BFT-DPOS (Byzantine Fault Tolerance - Delegated Proof of Stake) consensus. In this article, I will explain the workflow of EOS and compare it with Ethereum that is a PoW (Proof of Work) Blockchain. In the following, you can know&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;# Footprint of transactions in EOS.IO&quot;&gt;Footprint of transactions in EOS.IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;# BFT-DPOS consensus algorithm in EOS.IO&quot;&gt;BFT-DPOS consensus algorithm in EOS.IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;# Comparison between EOS and Ethereum&quot;&gt;Comparison between EOS and Ethereum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="English" scheme="http://xwu64.github.io/tags/English/"/>
    
      <category term="Blockchain" scheme="http://xwu64.github.io/tags/Blockchain/"/>
    
      <category term="EOS" scheme="http://xwu64.github.io/tags/EOS/"/>
    
      <category term="DPOS" scheme="http://xwu64.github.io/tags/DPOS/"/>
    
  </entry>
  
</feed>
